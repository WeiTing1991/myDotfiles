-- own version of gruvbox.

-- Reset highlighting.
vim.cmd.highlight "clear"
if vim.fn.exists "syntax_on" then
  vim.cmd.syntax "reset"
end
vim.o.termguicolors = true
vim.g.colors_name = "bella-gruvbox"

-- Configuration options
local config = {
  terminal_colors = true,
  undercurl = true,
  underline = true,
  bold = true,
  italic = {
    strings = false,
    emphasis = true,
    comments = true,
    operators = false,
    folds = false,
  },
  strikethrough = true,
  invert_selection = false,
  invert_signs = false,
  invert_tabline = false,
  invert_intend_guides = false,
  inverse = true,
  contrast = "hard", -- can be "hard", "soft" or empty string
  palette_overrides = {},
  overrides = {},
  dim_inactive = false,
  transparent_mode = false,
}

-- Main gruvbox color palette
local palette = {
  dark0_hard = "#1d2021",
  dark0 = "#282828",
  dark0_soft = "#32302f",
  dark1 = "#3c3836",
  dark2 = "#504945",
  dark3 = "#665c54",
  dark4 = "#7c6f64",
  light0_hard = "#f9f5d7",
  light0 = "#fbf1c7",
  light0_soft = "#f2e5bc",
  light1 = "#ebdbb2",
  light2 = "#d5c4a1",
  light3 = "#bdae93",
  light4 = "#a89984",
  bright_red = "#fb4934",
  bright_green = "#b8bb26",
  bright_yellow = "#fabd2f",
  bright_blue = "#83a598",
  bright_purple = "#d3869b",
  bright_aqua = "#8ec07c",
  bright_orange = "#fe8019",
  neutral_red = "#cc241d",
  neutral_green = "#98971a",
  neutral_yellow = "#d79921",
  neutral_blue = "#458588",
  neutral_purple = "#b16286",
  neutral_aqua = "#689d6a",
  neutral_orange = "#d65d0e",
  faded_red = "#9d0006",
  faded_green = "#79740e",
  faded_yellow = "#b57614",
  faded_blue = "#076678",
  faded_purple = "#8f3f71",
  faded_aqua = "#427b58",
  faded_orange = "#af3a03",
  dark_red_hard = "#792329",
  dark_red = "#722529",
  dark_red_soft = "#7b2c2f",
  light_red_hard = "#fc9690",
  light_red = "#fc9487",
  light_red_soft = "#f78b7f",
  dark_green_hard = "#5a633a",
  dark_green = "#62693e",
  dark_green_soft = "#686d43",
  light_green_hard = "#d3d6a5",
  light_green = "#d5d39b",
  light_green_soft = "#cecb94",
  dark_aqua_hard = "#3e4934",
  dark_aqua = "#49503b",
  dark_aqua_soft = "#525742",
  light_aqua_hard = "#e6e9c1",
  light_aqua = "#e8e5b5",
  light_aqua_soft = "#e1dbac",
  gray = "#928374",
  white = "#F6F6F5",
  black = "#000000",
  transparent_black = "#1E1F29",
}

-- Apply palette overrides from config
for color, hex in pairs(config.palette_overrides) do
  palette[color] = hex
end

-- Get a hex list of gruvbox colors based on current bg and contrast config
local function get_colors()
  local p = palette
  local bg = vim.o.background
  local contrast = config.contrast

  local color_groups = {
    dark = {
      bg0 = p.dark0,
      bg1 = p.dark1,
      bg2 = p.dark2,
      bg3 = p.dark3,
      bg4 = p.dark4,
      fg0 = p.light0,
      fg1 = p.light1,
      fg2 = p.light2,
      fg3 = p.light3,
      fg4 = p.light4,
      red = p.bright_red,
      green = p.bright_green,
      yellow = p.bright_yellow,
      blue = p.bright_blue,
      purple = p.bright_purple,
      aqua = p.bright_aqua,
      orange = p.bright_orange,
      neutral_red = p.neutral_red,
      neutral_green = p.neutral_green,
      neutral_yellow = p.neutral_yellow,
      neutral_blue = p.neutral_blue,
      neutral_purple = p.neutral_purple,
      neutral_aqua = p.neutral_aqua,
      dark_red = p.dark_red,
      dark_green = p.dark_green,
      dark_aqua = p.dark_aqua,
      gray = p.gray,
      white = p.white,
      black = p.black,
      transparent_black = p.transparent_black,
    },
    light = {
      bg0 = p.light0,
      bg1 = p.light1,
      bg2 = p.light2,
      bg3 = p.light3,
      bg4 = p.light4,
      fg0 = p.dark0,
      fg1 = p.dark1,
      fg2 = p.dark2,
      fg3 = p.dark3,
      fg4 = p.dark4,
      red = p.faded_red,
      green = p.faded_green,
      yellow = p.faded_yellow,
      blue = p.faded_blue,
      purple = p.faded_purple,
      aqua = p.faded_aqua,
      orange = p.faded_orange,
      neutral_red = p.neutral_red,
      neutral_green = p.neutral_green,
      neutral_yellow = p.neutral_yellow,
      neutral_blue = p.neutral_blue,
      neutral_purple = p.neutral_purple,
      neutral_aqua = p.neutral_aqua,
      dark_red = p.light_red,
      dark_green = p.light_green,
      dark_aqua = p.light_aqua,
      gray = p.gray,
      white = p.white,
      black = p.black,
      transparent_black = p.transparent_black,
    },
  }

  if contrast ~= nil and contrast ~= "" then
    color_groups[bg].bg0 = p[bg .. "0_" .. contrast]
    color_groups[bg].dark_red = p[bg .. "_red_" .. contrast]
    color_groups[bg].dark_green = p[bg .. "_green_" .. contrast]
    color_groups[bg].dark_aqua = p[bg .. "_aqua_" .. contrast]
  end

  return color_groups[bg]
end

-- Get colors based on current settings
local colors = get_colors()

-- Set terminal colors if enabled
if config.terminal_colors then
  local term_colors = {
    colors.bg0,
    colors.neutral_red,
    colors.neutral_green,
    colors.neutral_yellow,
    colors.neutral_blue,
    colors.neutral_purple,
    colors.neutral_aqua,
    colors.fg4,
    colors.gray,
    colors.red,
    colors.green,
    colors.yellow,
    colors.blue,
    colors.purple,
    colors.aqua,
    colors.fg1,
  }
  for index, value in ipairs(term_colors) do
    vim.g["terminal_color_" .. index - 1] = value
  end
end

-- not working
local statusline_groups = {}
for mode, color in pairs {
  Normal = "purple",
  Pending = "bright_purple",
  Visual = "yellow",
  Insert = "green",
  Command = "aqua",
  Other = "orange",
} do
  statusline_groups["StatuslineMode" .. mode] = { fg = colors.transparent_black, bg = colors[color] }
  statusline_groups["StatuslineModeSeparator" .. mode] = { fg = colors[color], bg = colors.transparent_black }
end

statusline_groups = vim.tbl_extend("error", statusline_groups, {
  StatuslineItalic = { fg = colors.gray, bg = colors.transparent_black, italic = true },
  StatuslineSpinner = { fg = colors.bright_green, bg = colors.transparent_black, bold = true },
  StatuslineTitle = { fg = colors.white, bg = colors.transparent_black, bold = true },
})

-- Define highlight groups
local groups = {
  -- Basic groups
  GruvboxFg0 = { fg = colors.fg0 },
  GruvboxFg1 = { fg = colors.fg1 },
  GruvboxFg2 = { fg = colors.fg2 },
  GruvboxFg3 = { fg = colors.fg3 },
  GruvboxFg4 = { fg = colors.fg4 },
  GruvboxGray = { fg = colors.gray },
  GruvboxBg0 = { fg = colors.bg0 },
  GruvboxBg1 = { fg = colors.bg1 },
  GruvboxBg2 = { fg = colors.bg2 },
  GruvboxBg3 = { fg = colors.bg3 },
  GruvboxBg4 = { fg = colors.bg4 },
  GruvboxRed = { fg = colors.red },
  GruvboxRedBold = { fg = colors.red, bold = config.bold },
  GruvboxGreen = { fg = colors.green },
  GruvboxGreenBold = { fg = colors.green, bold = config.bold },
  GruvboxYellow = { fg = colors.yellow },
  GruvboxYellowBold = { fg = colors.yellow, bold = config.bold },
  GruvboxBlue = { fg = colors.blue },
  GruvboxBlueBold = { fg = colors.blue, bold = config.bold },
  GruvboxPurple = { fg = colors.purple },
  GruvboxPurpleBold = { fg = colors.purple, bold = config.bold },
  GruvboxAqua = { fg = colors.aqua },
  GruvboxAquaBold = { fg = colors.aqua, bold = config.bold },
  GruvboxOrange = { fg = colors.orange },
  GruvboxOrangeBold = { fg = colors.orange, bold = config.bold },

  -- Sign column groups
  GruvboxRedSign = config.transparent_mode and { fg = colors.red, reverse = config.invert_signs }
    or { fg = colors.red, bg = colors.bg1, reverse = config.invert_signs },
  GruvboxGreenSign = config.transparent_mode and { fg = colors.green, reverse = config.invert_signs }
    or { fg = colors.green, bg = colors.bg1, reverse = config.invert_signs },
  GruvboxYellowSign = config.transparent_mode and { fg = colors.yellow, reverse = config.invert_signs }
    or { fg = colors.yellow, bg = colors.bg1, reverse = config.invert_signs },
  GruvboxBlueSign = config.transparent_mode and { fg = colors.blue, reverse = config.invert_signs }
    or { fg = colors.blue, bg = colors.bg1, reverse = config.invert_signs },
  GruvboxPurpleSign = config.transparent_mode and { fg = colors.purple, reverse = config.invert_signs }
    or { fg = colors.purple, bg = colors.bg1, reverse = config.invert_signs },
  GruvboxAquaSign = config.transparent_mode and { fg = colors.aqua, reverse = config.invert_signs }
    or { fg = colors.aqua, bg = colors.bg1, reverse = config.invert_signs },
  GruvboxOrangeSign = config.transparent_mode and { fg = colors.orange, reverse = config.invert_signs }
    or { fg = colors.orange, bg = colors.bg1, reverse = config.invert_signs },

  -- Underline groups
  GruvboxRedUnderline = { undercurl = config.undercurl, sp = colors.red },
  GruvboxGreenUnderline = { undercurl = config.undercurl, sp = colors.green },
  GruvboxYellowUnderline = { undercurl = config.undercurl, sp = colors.yellow },
  GruvboxBlueUnderline = { undercurl = config.undercurl, sp = colors.blue },
  GruvboxPurpleUnderline = { undercurl = config.undercurl, sp = colors.purple },
  GruvboxAquaUnderline = { undercurl = config.undercurl, sp = colors.aqua },
  GruvboxOrangeUnderline = { undercurl = config.undercurl, sp = colors.orange },

  -- Standard vim groups
  Normal = config.transparent_mode and { fg = colors.fg1, bg = nil } or { fg = colors.fg1, bg = colors.bg0 },
  NormalFloat = config.transparent_mode and { fg = colors.fg0, bg = nil } or { fg = colors.fg1, bg = colors.bg0 },
  NormalNC = config.dim_inactive and { fg = colors.fg0, bg = colors.bg1 } or { link = "Normal" },
  CursorLine = { bg = colors.bg1 },
  CursorColumn = { link = "CursorLine" },
  TabLineFill = { fg = colors.bg4, bg = colors.bg1, reverse = config.invert_tabline },
  TabLineSel = { fg = colors.green, bg = colors.bg1, reverse = config.invert_tabline },
  TabLine = { link = "TabLineFill" },
  MatchParen = { bg = colors.bg3, bold = config.bold },
  ColorColumn = { bg = colors.bg1 },
  Conceal = { fg = colors.blue },
  CursorLineNr = { fg = colors.yellow, bg = colors.bg1 },
  NonText = { link = "GruvboxBg2" },
  SpecialKey = { link = "GruvboxFg4" },
  Visual = { bg = colors.bg3, reverse = config.invert_selection },
  VisualNOS = { link = "Visual" },
  Search = { fg = colors.yellow, bg = colors.bg0, reverse = config.inverse },
  IncSearch = { fg = colors.orange, bg = colors.bg0, reverse = config.inverse },
  CurSearch = { link = "IncSearch" },
  QuickFixLine = { link = "GruvboxPurple" },
  Underlined = { fg = colors.blue, underline = config.underline },
  StatusLine = { fg = colors.fg1, bg = colors.bg2 },
  StatusLineNC = { fg = colors.fg4, bg = colors.bg1 },
  WinBar = { fg = colors.fg0, bg = colors.bg4 },
  WinBarNC = { fg = colors.fg3, bg = colors.bg0 },
  WinSeparator = config.transparent_mode and { fg = colors.white, bg = nil } or { fg = colors.white, bg = colors.bg0 },
  WildMenu = { fg = colors.blue, bg = colors.bg2, bold = config.bold },
  Directory = { link = "GruvboxGreenBold" },
  Title = { link = "GruvboxGreenBold" },
  ErrorMsg = { fg = colors.bg0, bg = colors.red, bold = config.bold },
  YankHighlight = { fg = colors.bg1, bg = colors.yellow },

  -- Command line groups
  MoreMsg = { link = "GruvboxYellowBold" },
  MsgArea = { link = "GruvboxGreenBold" },
  MsgSeparator = { link = "GruvboxPurple" },

  ModeMsg = { link = "GruvboxYellowBold" },
  Question = { link = "GruvboxOrangeBold" },
  WarningMsg = { link = "GruvboxRedBold" },
  LineNr = { fg = colors.bg4 },
  SignColumn = config.transparent_mode and { bg = nil } or { bg = nil },
  Folded = { fg = colors.gray, bg = colors.bg1, italic = config.italic.folds },
  FoldColumn = config.transparent_mode and { fg = colors.gray, bg = nil } or { fg = colors.gray, bg = colors.bg0 },
  Cursor = { reverse = config.inverse },
  vCursor = { link = "Cursor" },
  iCursor = { link = "Cursor" },
  lCursor = { link = "Cursor" },

  -- Syntax groups
  Special = { link = "GruvboxOrange" },
  Comment = { fg = colors.gray, italic = config.italic.comments },
  Todo = { fg = colors.bg0, bg = colors.yellow, bold = config.bold, italic = config.italic.comments },
  Done = { fg = colors.orange, bold = config.bold, italic = config.italic.comments },
  Error = { fg = colors.red, bold = config.bold, reverse = config.inverse },
  Statement = { link = "GruvboxRed" },
  Conditional = { link = "GruvboxRed" },
  Repeat = { link = "GruvboxRed" },
  Label = { link = "GruvboxRed" },
  Exception = { link = "GruvboxRed" },
  Operator = { fg = colors.orange, italic = config.italic.operators },
  Keyword = { link = "GruvboxRed" },
  Identifier = { link = "GruvboxBlue" },
  Function = { link = "GruvboxGreenBold" },
  PreProc = { link = "GruvboxAqua" },
  Include = { link = "GruvboxAqua" },
  Define = { link = "GruvboxAqua" },
  Macro = { link = "GruvboxAqua" },
  PreCondit = { link = "GruvboxAqua" },
  Constant = { link = "GruvboxPurple" },
  Character = { link = "GruvboxPurple" },
  String = { fg = colors.green, italic = config.italic.strings },
  Boolean = { link = "GruvboxPurple" },
  Number = { link = "GruvboxPurple" },
  Float = { link = "GruvboxPurple" },
  Type = { link = "GruvboxYellow" },
  StorageClass = { link = "GruvboxOrange" },
  Structure = { link = "GruvboxAqua" },
  Typedef = { link = "GruvboxYellow" },

  -- Treesitter
  ["@comment"] = { link = "Comment" },
  ["@none"] = { bg = "NONE", fg = "NONE" },
  ["@preproc"] = { link = "PreProc" },
  ["@define"] = { link = "Define" },
  ["@operator"] = { link = "Operator" },
  ["@punctuation.delimiter"] = { link = "Delimiter" },
  ["@punctuation.bracket"] = { link = "Delimiter" },
  ["@punctuation.special"] = { link = "Delimiter" },
  ["@string"] = { link = "String" },
  ["@string.regex"] = { link = "String" },
  ["@string.regexp"] = { link = "String" },
  ["@string.escape"] = { link = "SpecialChar" },
  ["@string.special"] = { link = "SpecialChar" },
  ["@string.special.path"] = { link = "Underlined" },
  ["@string.special.symbol"] = { link = "Identifier" },
  ["@string.special.url"] = { link = "Underlined" },
  ["@character"] = { link = "Character" },
  ["@character.special"] = { link = "SpecialChar" },
  ["@boolean"] = { link = "Boolean" },
  ["@number"] = { link = "Number" },
  ["@number.float"] = { link = "Float" },
  ["@float"] = { link = "Float" },
  ["@function"] = { link = "Function" },
  ["@function.builtin"] = { link = "Special" },
  ["@function.call"] = { link = "Function" },
  ["@function.macro"] = { link = "Macro" },
  ["@function.method"] = { link = "Function" },
  ["@method"] = { link = "Function" },
  ["@method.call"] = { link = "Function" },
  ["@constructor"] = { link = "Special" },
  ["@parameter"] = { link = "Identifier" },
  ["@keyword"] = { link = "Keyword" },
  ["@keyword.conditional"] = { link = "Conditional" },
  ["@keyword.debug"] = { link = "Debug" },
  ["@keyword.directive"] = { link = "PreProc" },
  ["@keyword.directive.define"] = { link = "Define" },
  ["@keyword.exception"] = { link = "Exception" },
  ["@keyword.function"] = { link = "Keyword" },
  ["@keyword.import"] = { link = "Include" },
  ["@keyword.operator"] = { link = "GruvboxRed" },
  ["@keyword.repeat"] = { link = "Repeat" },
  ["@keyword.return"] = { link = "Keyword" },
  ["@keyword.storage"] = { link = "StorageClass" },
  ["@conditional"] = { link = "Conditional" },
  ["@repeat"] = { link = "Repeat" },
  ["@debug"] = { link = "Debug" },
  ["@label"] = { link = "Label" },
  ["@include"] = { link = "Include" },
  ["@exception"] = { link = "Exception" },
  ["@type"] = { link = "Type" },
  ["@type.builtin"] = { link = "Type" },
  ["@type.definition"] = { link = "Typedef" },
  ["@type.qualifier"] = { link = "Type" },
  ["@storageclass"] = { link = "StorageClass" },
  ["@attribute"] = { link = "PreProc" },
  ["@field"] = { link = "Identifier" },
  ["@property"] = { link = "Identifier" },
  ["@variable"] = { link = "GruvboxFg1" },
  ["@variable.builtin"] = { link = "Special" },
  ["@variable.member"] = { link = "Identifier" },
  ["@variable.parameter"] = { link = "Identifier" },
  ["@constant"] = { link = "Constant" },
  ["@constant.builtin"] = { link = "Special" },
  ["@constant.macro"] = { link = "Define" },
  ["@markup"] = { link = "GruvboxFg1" },
  ["@markup.strong"] = { bold = config.bold },
  ["@markup.italic"] = { link = "@text.emphasis" },
  ["@markup.underline"] = { underline = config.underline },
  ["@markup.strikethrough"] = { strikethrough = config.strikethrough },
  ["@markup.heading"] = { link = "Title" },
  ["@markup.raw"] = { link = "String" },
  ["@markup.math"] = { link = "Special" },
  ["@markup.environment"] = { link = "Macro" },
  ["@markup.environment.name"] = { link = "Type" },
  ["@markup.link"] = { link = "Underlined" },
  ["@markup.link.label"] = { link = "SpecialChar" },
  ["@markup.list"] = { link = "Delimiter" },
  ["@markup.list.checked"] = { link = "GruvboxGreen" },
  ["@markup.list.unchecked"] = { link = "GruvboxGray" },
  ["@comment.todo"] = { link = "Todo" },
  ["@comment.note"] = { link = "SpecialComment" },
  ["@comment.warning"] = { link = "WarningMsg" },
  ["@comment.error"] = { link = "ErrorMsg" },
  ["@diff.plus"] = { link = "diffAdded" },
  ["@diff.minus"] = { link = "diffRemoved" },
  ["@diff.delta"] = { link = "diffChanged" },
  ["@module"] = { link = "GruvboxFg1" },
  ["@namespace"] = { link = "GruvboxFg1" },
  ["@symbol"] = { link = "Identifier" },
  ["@text"] = { link = "GruvboxFg1" },
  ["@text.strong"] = { bold = config.bold },
  ["@text.emphasis"] = { italic = config.italic.emphasis },
  ["@text.underline"] = { underline = config.underline },
  ["@text.strike"] = { strikethrough = config.strikethrough },
  ["@text.title"] = { link = "Title" },
  ["@text.literal"] = { link = "String" },
  ["@text.uri"] = { link = "Underlined" },
  ["@text.math"] = { link = "Special" },
  ["@text.environment"] = { link = "Macro" },
  ["@text.environment.name"] = { link = "Type" },
  ["@text.reference"] = { link = "Constant" },
  ["@text.todo"] = { link = "Todo" },
  ["@text.todo.checked"] = { link = "GruvboxGreen" },
  ["@text.todo.unchecked"] = { link = "GruvboxGray" },
  ["@text.note"] = { link = "SpecialComment" },
  ["@text.note.comment"] = { fg = colors.purple, bold = config.bold },
  ["@text.warning"] = { link = "WarningMsg" },
  ["@text.danger"] = { link = "ErrorMsg" },
  ["@text.danger.comment"] = { fg = colors.fg0, bg = colors.red, bold = config.bold },
  ["@text.diff.add"] = { link = "diffAdded" },
  ["@text.diff.delete"] = { link = "diffRemoved" },
  ["@tag"] = { link = "Tag" },
  ["@tag.attribute"] = { link = "Identifier" },
  ["@tag.delimiter"] = { link = "Delimiter" },
  ["@punctuation"] = { link = "Delimiter" },
  ["@macro"] = { link = "Macro" },
  ["@structure"] = { link = "Structure" },

  -- Additional Treesitter highlights
  ["@annotation"] = { link = "GruvboxYellow" },
  ["@error"] = { link = "GruvboxRed" },
  ["@keyword.function.ruby"] = { link = "GruvboxRed" },
  ["@keyword.include"] = { link = "Include" },
  ["@markup.link.uri"] = { link = "@text.uri" },
  ["@parameter.reference"] = { link = "GruvboxOrange" },
  ["@regexp"] = { link = "@string.regex" },

  -- LSP semantic tokens
  ["@lsp.type.class"] = { link = "@type" },
  ["@lsp.type.comment"] = { link = "@comment" },
  ["@lsp.type.decorator"] = { link = "@macro" },
  ["@lsp.type.enum"] = { link = "@type" },
  ["@lsp.type.enumMember"] = { link = "@constant" },
  ["@lsp.type.function"] = { link = "@function" },
  ["@lsp.type.interface"] = { link = "@constructor" },
  ["@lsp.type.macro"] = { link = "@macro" },
  ["@lsp.type.method"] = { link = "@method" },
  ["@lsp.type.modifier.java"] = { link = "@keyword.type.java" },
  ["@lsp.type.namespace"] = { link = "@namespace" },
  ["@lsp.type.parameter"] = { link = "@parameter" },
  ["@lsp.type.property"] = { link = "@property" },
  ["@lsp.type.struct"] = { link = "@type" },
  ["@lsp.type.type"] = { link = "@type" },
  ["@lsp.type.typeParameter"] = { link = "@type.definition" },
  ["@lsp.type.variable"] = { link = "@variable" },

  -- Non-LSP semantic tokens (alternative to LSP semantic tokens)
  ["@class"] = { link = "@type" },
  ["@decorator"] = { link = "@macro" },
  ["@enum"] = { link = "@type" },
  ["@enumMember"] = { link = "@constant" },
  ["@event"] = { link = "@type" },
  ["@interface"] = { link = "@constructor" },
  ["@modifier"] = { link = "@type" },
  ["@struct"] = { link = "@type" },
  ["@typeParameter"] = { link = "@type" },

  -- Package manager.
  LazyDimmed = { fg = colors.grey },

  -- LSP
  LspReferenceRead = { link = "GruvboxYellowBold" },
  LspReferenceTarget = { link = "Visual" },
  LspReferenceText = { link = "GruvboxYellowBold" },
  LspReferenceWrite = { link = "GruvboxOrangeBold" },
  LspCodeLens = { link = "GruvboxGray" },
  LspSignatureActiveParameter = { link = "Search" },
  LspFloatWinBorder = { link = "Comment" },

  --TODO:
  LspInlayHint = { fg = colors.white, italic = true },

  -- Diagnostics
  DiagnosticDeprecated = { strikethrough = true, fg = colors.fg0 },
  DiagnosticError = { link = "GruvboxRed" },
  DiagnosticSignError = { link = "GruvboxRedSign" },
  DiagnosticUnderlineError = { link = "GruvboxRedUnderline" },
  DiagnosticWarn = { link = "GruvboxYellow" },
  DiagnosticSignWarn = { link = "GruvboxYellowSign" },
  DiagnosticUnderlineWarn = { link = "GruvboxYellowUnderline" },
  DiagnosticInfo = { link = "GruvboxBlue" },
  DiagnosticSignInfo = { link = "GruvboxBlueSign" },
  DiagnosticUnderlineInfo = { link = "GruvboxBlueUnderline" },
  DiagnosticHint = { link = "GruvboxAqua" },
  DiagnosticSignHint = { link = "GruvboxAquaSign" },
  DiagnosticUnderlineHint = { link = "GruvboxAquaUnderline" },
  DiagnosticFloatingError = { link = "GruvboxRed" },
  DiagnosticFloatingWarn = { link = "GruvboxOrange" },
  DiagnosticFloatingInfo = { link = "GruvboxBlue" },
  DiagnosticFloatingHint = { link = "GruvboxAqua" },
  DiagnosticVirtualTextError = { link = "GruvboxRed" },
  DiagnosticVirtualTextWarn = { link = "GruvboxYellow" },
  DiagnosticVirtualTextInfo = { link = "GruvboxBlue" },
  DiagnosticVirtualTextHint = { link = "GruvboxAqua" },
  DiagnosticOk = { link = "GruvboxGreenSign" },
  DiagnosticUnnecessary = { fg = colors.grey, italic = true },

  -- Fzf overrides.
  FzfLuaBorder = { link = "GruvboxGray" },
  FzfLuaHeaderBind = { link = "GruvboxPurple" },
  FzfLuaHeaderText = { link = "GruvboxRed" },
  FzfLuaLivePrompt = { link = "Normal" },
  FzfLuaLiveSym = { link = "GruvboxPurpleBold" },
  FzfLuaPreviewTitle = { link = "GruvboxFg1" },
  FzfLuaSearch = { bg = colors.dark_red },

  -- Telescope
  -- TelescopeNormal = { link = "GruvboxFg1" },
  -- TelescopeSelection = { link = "GruvboxOrangeBold" },
  -- TelescopeSelectionCaret = { link = "GruvboxRed" },
  -- TelescopeMultiSelection = { link = "GruvboxGray" },
  -- TelescopeBorder = { link = "TelescopeNormal" },
  -- TelescopePromptBorder = { link = "TelescopeNormal" },
  -- TelescopeResultsBorder = { link = "TelescopeNormal" },
  -- TelescopePreviewBorder = { link = "TelescopeNormal" },
  -- TelescopeMatching = { link = "GruvboxBlue" },
  -- TelescopePromptPrefix = { link = "GruvboxRed" },
  -- TelescopePrompt = { link = "TelescopeNormal" },

  -- UI elements
  Pmenu = { fg = colors.fg1, bg = colors.bg2 },
  PmenuSel = { fg = colors.bg2, bg = colors.blue, bold = config.bold },
  PmenuSbar = { bg = colors.bg2 },
  PmenuThumb = { bg = colors.bg4 },
  Whitespace = { fg = colors.bg2 },
  Delimiter = { link = "GruvboxOrange" },
  EndOfBuffer = { link = "NonText" },

  -- Completions:
  BlinkCmpKindClass = { link = "@type" },
  BlinkCmpKindColor = { link = "DevIconCss" },
  BlinkCmpKindConstant = { link = "@constant" },
  BlinkCmpKindConstructor = { link = "@type" },
  BlinkCmpKindEnum = { link = "@variable.member" },
  BlinkCmpKindEnumMember = { link = "@variable.member" },
  BlinkCmpKindEvent = { link = "@constant" },
  BlinkCmpKindField = { link = "@variable.member" },
  BlinkCmpKindFile = { link = "Directory" },
  BlinkCmpKindFolder = { link = "Directory" },
  BlinkCmpKindFunction = { link = "@function" },
  BlinkCmpKindInterface = { link = "@type" },
  BlinkCmpKindKeyword = { link = "@keyword" },
  BlinkCmpKindMethod = { link = "@function.method" },
  BlinkCmpKindModule = { link = "@module" },
  BlinkCmpKindOperator = { link = "@operator" },
  BlinkCmpKindProperty = { link = "@property" },
  BlinkCmpKindReference = { link = "@parameter.reference" },
  BlinkCmpKindSnippet = { link = "@markup" },
  BlinkCmpKindStruct = { link = "@structure" },
  BlinkCmpKindText = { link = "@markup" },
  BlinkCmpKindTypeParameter = { link = "@variable.parameter" },
  BlinkCmpKindUnit = { link = "@variable.member" },
  BlinkCmpKindValue = { link = "@variable.member" },
  BlinkCmpKindVariable = { link = "@variable" },
  BlinkCmpLabelDeprecated = { link = "DiagnosticDeprecated" },
  BlinkCmpLabelDescription = { fg = colors.bg3, italic = true },
  BlinkCmpLabelDetail = { fg = colors.bg4, bg = colors.bg1 },
  BlinkCmpMenu = { bg = colors.bg1 },
  BlinkCmpMenuBorder = { bg = colors.bg1 },

  BlinkCmpLabel = { link = "GruvboxFg0" },
  BlinkCmpLabelMatch = { link = "GruvboxBlueBold" },
  BlinkCmpSource = { link = "GruvboxGray" },
  BlinkCmpGhostText = { link = "GruvboxBg4" },

  -- Spelling
  SpellCap = { link = "GruvboxBlueUnderline" },
  SpellBad = { link = "GruvboxRedUnderline" },
  SpellLocal = { link = "GruvboxAquaUnderline" },
  SpellRare = { link = "GruvboxPurpleUnderline" },

  -- Gitsigns
  GitSignsAdd = { link = "GruvboxGreen" },
  GitSignsChange = { link = "GruvboxAqua" },
  GitSignsDelete = { link = "GruvboxRed" },
  GitSignsStagedAdd = { link = "GruvboxOrange" },
  GitSignsStagedChange = { link = "GruvboxOrange" },
  GitSignsStagedDelete = { link = "GruvboxOrange" },

  -- Markdown
  markdownItalic = { fg = colors.fg3, italic = true },
  markdownBold = { fg = colors.fg3, bold = config.bold },
  markdownBoldItalic = { fg = colors.fg3, bold = config.bold, italic = true },
  markdownH1 = { link = "GruvboxGreenBold" },
  markdownH2 = { link = "GruvboxGreenBold" },
  markdownH3 = { link = "GruvboxYellowBold" },
  markdownH4 = { link = "GruvboxYellowBold" },
  markdownH5 = { link = "GruvboxYellow" },
  markdownH6 = { link = "GruvboxYellow" },
  markdownCode = { link = "GruvboxAqua" },
  markdownCodeBlock = { link = "GruvboxAqua" },
  markdownCodeDelimiter = { link = "GruvboxAqua" },
  markdownBlockquote = { link = "GruvboxGray" },
  markdownListMarker = { link = "GruvboxGray" },
  markdownOrderedListMarker = { link = "GruvboxGray" },
  markdownRule = { link = "GruvboxGray" },
  markdownHeadingRule = { link = "GruvboxGray" },
  markdownUrlDelimiter = { link = "GruvboxFg3" },
  markdownLinkDelimiter = { link = "GruvboxFg3" },
  markdownLinkTextDelimiter = { link = "GruvboxFg3" },
  markdownHeadingDelimiter = { link = "GruvboxOrange" },
  markdownUrl = { link = "GruvboxPurple" },
  markdownUrlTitleDelimiter = { link = "GruvboxGreen" },
  markdownLinkText = { fg = colors.gray, underline = config.underline },
  markdownIdDeclaration = { link = "markdownLinkText" },

  MiniFilesBorder = { link = "FloatBorder" },
  MiniFilesBorderModified = { link = "DiagnosticFloatingWarn" },
  MiniFilesCursorLine = { bg = colors.bg2 },
  MiniFilesDirectory = { link = "Directory" },
  MiniFilesFile = { link = "GruvboxFg1" },
  MiniFilesNormal = { link = "NormalFloat" },
  MiniFilesTitle = { link = "FloatTitle" },
  MiniFilesTitleFocused = { link = "GruvboxOrangeBold" },

  MiniSurround = { link = "IncSearch" },

  MiniClueBorder = { link = "FloatBorder" },
  MiniClueDescGroup = { link = "DiagnosticFloatingWarn" },
  MiniClueDescSingle = { link = "NormalFloat" },
  MiniClueNextKey = { link = "DiagnosticFloatingHint" },
  MiniClueNextKeyWithPostkeys = { link = "DiagnosticFloatingError" },
  MiniClueSeparator = { link = "DiagnosticFloatingInfo" },
  MiniClueTitle = { link = "FloatTitle" },

  DashboardShortCut = { link = "GruvboxOrange" },
  DashboardHeader = { link = "GruvboxYellow" },
  DashboardCenter = { link = "GruvboxRed" },
  DashboardFooter = { fg = colors.purple, italic = true },

  -- NvimTree
  NvimTreeSymlink = { fg = colors.neutral_aqua },
  NvimTreeRootFolder = { fg = colors.neutral_purple, bold = true },
  NvimTreeFolderIcon = { fg = colors.neutral_blue, bold = true },
  NvimTreeFileIcon = { fg = colors.light2 },
  NvimTreeExecFile = { fg = colors.neutral_green, bold = true },
  NvimTreeOpenedFile = { fg = colors.bright_red, bold = true },
  NvimTreeSpecialFile = { fg = colors.neutral_yellow, bold = true, underline = true },
  NvimTreeImageFile = { fg = colors.neutral_purple },
  NvimTreeIndentMarker = { fg = colors.dark3 },
  NvimTreeGitDirty = { fg = colors.neutral_yellow },
  NvimTreeGitStaged = { fg = colors.neutral_yellow },
  NvimTreeGitMerge = { fg = colors.neutral_purple },
  NvimTreeGitRenamed = { fg = colors.neutral_purple },
  NvimTreeGitNew = { fg = colors.neutral_yellow },
  NvimTreeGitDeleted = { fg = colors.neutral_red },
  NvimTreeWindowPicker = { bg = colors.aqua },

  -- C#
  csBraces = { link = "GruvboxFg1" },
  csEndColon = { link = "GruvboxFg1" },
  csLogicSymbols = { link = "GruvboxFg1" },
  csParens = { link = "GruvboxFg3" },
  csOpSymbols = { link = "GruvboxFg3" },
  csInterpolationDelimiter = { link = "GruvboxFg3" },
  csInterpolationAlignDel = { link = "GruvboxAquaBold" },
  csInterpolationFormat = { link = "GruvboxAqua" },
  csInterpolationFormatDel = { link = "GruvboxAquaBold" },

  -- HTML
  htmlTag = { link = "GruvboxAquaBold" },
  htmlEndTag = { link = "GruvboxAquaBold" },
  htmlTagName = { link = "GruvboxBlue" },
  htmlArg = { link = "GruvboxOrange" },
  htmlTagN = { link = "GruvboxFg1" },
  htmlSpecialTagName = { link = "GruvboxBlue" },
  htmlLink = { fg = colors.fg4, underline = config.underline },
  htmlSpecialChar = { link = "GruvboxRed" },
  htmlBold = { fg = colors.fg0, bg = colors.bg0, bold = config.bold },
  htmlBoldUnderline = { fg = colors.fg0, bg = colors.bg0, bold = config.bold, underline = config.underline },
  htmlBoldItalic = { fg = colors.fg0, bg = colors.bg0, bold = config.bold, italic = true },
  htmlBoldUnderlineItalic = {
    fg = colors.fg0,
    bg = colors.bg0,
    bold = config.bold,
    italic = true,
    underline = config.underline,
  },
  htmlUnderline = { fg = colors.fg0, bg = colors.bg0, underline = config.underline },
  htmlUnderlineItalic = { fg = colors.fg0, bg = colors.bg0, italic = true, underline = config.underline },
  htmlItalic = { fg = colors.fg0, bg = colors.bg0, italic = true },

  -- XML
  xmlTag = { link = "GruvboxAquaBold" },
  xmlEndTag = { link = "GruvboxAquaBold" },
  xmlTagName = { link = "GruvboxBlue" },
  xmlEqual = { link = "GruvboxBlue" },
  xmlAttrib = { link = "GruvboxOrange" },
  xmlEntity = { link = "GruvboxRed" },
  xmlEntityPunct = { link = "GruvboxRed" },

  -- CSS
  cssBraces = { link = "GruvboxBlue" },
  cssFunctionName = { link = "GruvboxYellow" },
  cssIdentifier = { link = "GruvboxOrange" },
  cssClassName = { link = "GruvboxGreen" },
  cssColor = { link = "GruvboxBlue" },
  cssSelectorOp = { link = "GruvboxBlue" },
  cssSelectorOp2 = { link = "GruvboxBlue" },
  cssImportant = { link = "GruvboxGreen" },
  cssVendor = { link = "GruvboxFg1" },
  cssTextProp = { link = "GruvboxAqua" },
  cssAnimationProp = { link = "GruvboxAqua" },
  cssUIProp = { link = "GruvboxYellow" },
  cssTransformProp = { link = "GruvboxAqua" },
  cssTransitionProp = { link = "GruvboxAqua" },
  cssPrintProp = { link = "GruvboxAqua" },
  cssPositioningProp = { link = "GruvboxYellow" },
  cssBoxProp = { link = "GruvboxAqua" },
  cssFontDescriptorProp = { link = "GruvboxAqua" },
  cssFlexibleBoxProp = { link = "GruvboxAqua" },
  cssBorderOutlineProp = { link = "GruvboxAqua" },
  cssBackgroundProp = { link = "GruvboxAqua" },
  cssMarginProp = { link = "GruvboxAqua" },
  cssListProp = { link = "GruvboxAqua" },
  cssTableProp = { link = "GruvboxAqua" },
  cssFontProp = { link = "GruvboxAqua" },
  cssPaddingProp = { link = "GruvboxAqua" },
  cssDimensionProp = { link = "GruvboxAqua" },
  cssRenderProp = { link = "GruvboxAqua" },
  cssColorProp = { link = "GruvboxAqua" },
  cssGeneratedContentProp = { link = "GruvboxAqua" },

  -- JavaScript
  javaScriptBraces = { link = "GruvboxFg1" },
  javaScriptFunction = { link = "GruvboxAqua" },
  javaScriptIdentifier = { link = "GruvboxRed" },
  javaScriptMember = { link = "GruvboxBlue" },
  javaScriptNumber = { link = "GruvboxPurple" },
  javaScriptNull = { link = "GruvboxPurple" },
  javaScriptParens = { link = "GruvboxFg3" },

  -- TypeScript
  typescriptReserved = { link = "GruvboxAqua" },
  typescriptLabel = { link = "GruvboxAqua" },
  typescriptFuncKeyword = { link = "GruvboxAqua" },
  typescriptIdentifier = { link = "GruvboxOrange" },
  typescriptBraces = { link = "GruvboxFg1" },
  typescriptEndColons = { link = "GruvboxFg1" },
  typescriptDOMObjects = { link = "GruvboxFg1" },
  typescriptAjaxMethods = { link = "GruvboxFg1" },
  typescriptLogicSymbols = { link = "GruvboxFg1" },
  typescriptDocSeeTag = { link = "Comment" },
  typescriptDocParam = { link = "Comment" },
  typescriptDocTags = { link = "vimCommentTitle" },
  typescriptGlobalObjects = { link = "GruvboxFg1" },
  typescriptParens = { link = "GruvboxFg3" },
  typescriptOpSymbols = { link = "GruvboxFg3" },
  typescriptHtmlElemProperties = { link = "GruvboxFg1" },
  typescriptNull = { link = "GruvboxPurple" },
  typescriptInterpolationDelimiter = { link = "GruvboxAqua" },

  jsonKeyword = { link = "GruvboxGreen" },
  jsonQuote = { link = "GruvboxGreen" },
  jsonBraces = { link = "GruvboxFg1" },
  jsonString = { link = "GruvboxFg1" },

  -- Python
  pythonBuiltin = { link = "GruvboxOrange" },
  pythonBuiltinObj = { link = "GruvboxOrange" },
  pythonBuiltinFunc = { link = "GruvboxOrange" },
  pythonFunction = { link = "GruvboxAqua" },
  pythonDecorator = { link = "GruvboxRed" },
  pythonInclude = { link = "GruvboxBlue" },
  pythonImport = { link = "GruvboxBlue" },
  pythonRun = { link = "GruvboxBlue" },
  pythonCoding = { link = "GruvboxBlue" },
  pythonOperator = { link = "GruvboxRed" },
  pythonException = { link = "GruvboxRed" },
  pythonExceptions = { link = "GruvboxPurple" },
  pythonBoolean = { link = "GruvboxPurple" },
  pythonDot = { link = "GruvboxFg3" },
  pythonConditional = { link = "GruvboxRed" },
  pythonRepeat = { link = "GruvboxRed" },
  pythonDottedName = { link = "GruvboxGreenBold" },

  -- -- Ruby
  -- rubyStringDelimiter = { link = "GruvboxGreen" },
  -- rubyInterpolationDelimiter = { link = "GruvboxAqua" },
  -- rubyDefinedOperator = { link = "rubyKeyword" },
  --
  -- -- Rust
  -- rustSigil = { link = "GruvboxOrange" },
  -- rustEscape = { link = "GruvboxAqua" },
  -- rustStringContinuation = { link = "GruvboxAqua" },
  -- rustEnum = { link = "GruvboxAqua" },
  -- rustStructure = { link = "GruvboxAqua" },
  -- rustModPathSep = { link = "GruvboxFg2" },
  -- rustCommentLineDoc = { link = "Comment" },
  -- rustDefault = { link = "GruvboxAqua" },
  --
  -- -- Java
  -- javaAnnotation = { link = "GruvboxBlue" },
  -- javaDocTags = { link = "GruvboxAqua" },
  -- javaCommentTitle = { link = "vimCommentTitle" },
  -- javaParen = { link = "GruvboxFg3" },
  -- javaParen1 = { link = "GruvboxFg3" },
  -- javaParen2 = { link = "GruvboxFg3" },
  -- javaParen3 = { link = "GruvboxFg3" },
  -- javaParen4 = { link = "GruvboxFg3" },
  -- javaParen5 = { link = "GruvboxFg3" },
  -- javaOperator = { link = "GruvboxOrange" },
  -- javaVarArg = { link = "GruvboxGreen" },

  -- Debugging
  -- debugPC = { link = "DiffAdd" },
  -- debugBreakpoint = { link = "GruvboxRedSign" },

  -- Diff highlighting
  -- DiffDelete = { bg = colors.dark_red },
  -- DiffAdd = { bg = colors.dark_green },
  -- DiffChange = { bg = colors.dark_aqua },
  -- DiffText = { bg = colors.yellow, fg = colors.bg0 },
  -- diffAdded = { link = "DiffAdd" },
  -- diffRemoved = { link = "DiffDelete" },
  -- diffChanged = { link = "DiffChange" },
  -- diffFile = { link = "GruvboxOrange" },
  -- diffNewFile = { link = "GruvboxYellow" },
  -- diffOldFile = { link = "GruvboxOrange" },
  -- diffLine = { link = "GruvboxBlue" },
  -- diffIndexLine = { link = "diffChanged" },
}

-- Apply user overrides
for group, hl in pairs(config.overrides) do
  if groups[group] then
    groups[group].link = nil
  end

  groups[group] = vim.tbl_extend("force", groups[group] or {}, hl)
end

-- Apply all highlights
for group, settings in pairs(groups) do
  vim.api.nvim_set_hl(0, group, settings)
end
