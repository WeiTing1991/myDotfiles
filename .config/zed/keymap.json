// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// https://github.com/zed-industries/zed/blob/main/assets/keymaps/default-macos.json
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "use_key_equivalents": false,
    "bindings": {
      "ctrl-o": "pane::ActivateNextItem",
      "ctrl-i": "pane::ActivatePreviousItem",
      "ctrl-shift-e": "workspace::ToggleLeftDock",
      "ctrl-e": "workspace::ToggleRightDock",
      "ctrl-/": "workspace::ToggleBottomDock",
      "ctrl-q": "pane::CloseActiveItem",

      //Navigation
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-shift-j": "vim::ResizePaneDown",
      "ctrl-shift-k": "vim::ResizePaneUp",
      "ctrl-shift-l": "vim::ResizePaneLeft",
      "ctrl-shift-h": "vim::ResizePaneRight",
      "ctrl-m": "workspace::ToggleZoom"
    }
  },
  {
    "context": "!Terminal && Editor",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-f": "file_finder::Toggle"
    }
  },
  {
    "context": "Workspace || Editor ",
    "bindings": {
      "ctrl-shift-e": "workspace::ToggleLeftDock",
      "ctrl-e": "project_panel::ToggleFocus",
      "ctrl-/": "workspace::ToggleBottomDock"
      // "ctrl-g": "git_panel::ToggleFocus",
      // "ctrl-p": "editor::ContextMenuPrevious",
      // "ctrl-n": "editor::ContextMenuNext"
    }
  },
  {
    "context": "FileFinder > Picker",
    "bindings": {
      "ctrl-j": "menu::SelectNext",
      "ctrl-k": "menu::SelectPrevious"
    }
  },
  {
    "context": "Pane",
    "use_key_equivalents": true,
    "bindings": {
      "ctrl-w '": "pane::SplitRight",
      "ctrl-w 5": "pane::SplitDown"
    }
  },
  {
    "context": "ProjectPanel",
    "use_key_equivalents": true,
    "bindings": {
      "left": "project_panel::CollapseSelectedEntry",
      "right": "project_panel::ExpandSelectedEntry",
      "cmd-n": "project_panel::NewFile",
      "cmd-d": "project_panel::Duplicate",
      "alt-cmd-n": "project_panel::NewDirectory",
      "cmd-x": "project_panel::Cut",
      "cmd-c": "project_panel::Copy",
      "cmd-v": "project_panel::Paste",
      "cmd-alt-c": "workspace::CopyPath",
      "alt-cmd-shift-c": "workspace::CopyRelativePath",
      "enter": "project_panel::Rename",
      "f2": "project_panel::Rename",
      "backspace": ["project_panel::Trash", { "skip_prompt": false }],
      "delete": ["project_panel::Trash", { "skip_prompt": false }],
      "cmd-backspace": ["project_panel::Trash", { "skip_prompt": true }],
      "cmd-delete": ["project_panel::Delete", { "skip_prompt": false }],
      "alt-cmd-r": "project_panel::RevealInFileManager",
      "ctrl-shift-enter": "project_panel::OpenWithSystem",
      "cmd-alt-backspace": ["project_panel::Delete", { "skip_prompt": false }],
      "cmd-shift-f": "project_panel::NewSearchInDirectory",
      "shift-down": "menu::SelectNext",
      "shift-up": "menu::SelectPrevious",
      "escape": "menu::Cancel"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "use_key_equivalents": true,
    "bindings": {
      "o": "project_panel::Open",
      "q": "pane::CloseActiveItem",
      "r": "project_panel::Rename",
      "n": "project_panel::NewFile",
      "N": "project_panel::NewDirectory",
      "d": "project_panel::Delete"
    }
  },
  // vim
  {
    "context": "Editor && vim_mode == normal && !VimWaiting",
    "bindings": {
      // Navigation
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "-": "editor::ToggleComments",
      "space ,": "editor::Format",
      "space f f": "file_finder::Toggle",
      "space f l": "workspace::NewSearch",
      "space x": "diagnostics::Deploy",
      "space l o": "outline_panel::ToggleFocus"
    }
  },
  {
    "context": "Editor && VimControl && !menu",
    "bindings": {
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "K": "editor::Hover"
    }
  },
  {
    "context": "Editor && edit_prediction && vim_mode == insert",
    "bindings": {
      "alt-tab": "editor::AcceptEditPrediction",
      "ctrl-l": "editor::AcceptPartialEditPrediction",
      "tab": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && vim_mode == insert && !menu",
    "bindings": {
      "j k": "vim::NormalBefore",
      "ctrl-y": "editor::ShowCompletions"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !menu",
    "bindings": {
      "K": "editor::MoveLineUp",
      "J": "editor::MoveLineDown",
      "-": [
        "editor::ToggleComments",
        {
          "advance_downwards": false
        }
      ]
    }
  },
  // launguage specific
  {
    "context": "Editor && extension == md",
    "bindings": {
      // "cmd-k v": "markdown::OpenPreviewToTheSide",
      // "cmd-shift-v": "markdown::OpenPreview"
      "space m k": "markdown::OpenPreviewToTheSide"
    }
  }
]
