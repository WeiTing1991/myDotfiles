(undo-tree-save-format-version . 1)
"68315accf5df051d8436e6de480de3789485005a"
[nil nil nil nil (26376 39054 776084 0) 0 nil]
([nil nil ((#(":" 0 1 (fontified t)) . 467) (undo-tree-id8 . 1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (t 26376 33573 14041 304000)) nil (26376 39066 489695 0) 0 nil] [nil nil ((292 . 292) (292 . 297) (291 . 291) (291 . 292) (#("d" 0 1 (face font-lock-constant-face fontified t)) . 291) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (t 26376 33573 14041 304000)) ((291 . 292) (#("j" 0 1 (face font-lock-constant-face fontified nil)) . 291) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("jjjjj" 0 5 (face font-lock-constant-face fontified t)) . 292) (undo-tree-id6 . -4) (undo-tree-id7 . -4)) (26376 39054 775897 0) 0 nil])
([nil current ((#("  :hook (markdown-mode . lsp-mode)
" 0 1 (face highlight-indent-guides-top-character-face display "▏" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "▏") (top) (face highlight-indent-guides-top-character-face display "▏")) ((#<marker at 42 in md.el> . #<marker at 238 in md.el>))) fontified t) 1 2 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 42 in md.el> . #<marker at 238 in md.el>))) fontified t) 2 7 (face font-lock-builtin-face fontified t) 7 35 (fontified t)) . 234) (undo-tree-id19 . -34) (undo-tree-id20 . -1) (undo-tree-id21 . -35) (undo-tree-id22 . -1) (undo-tree-id23 . -35) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -31) (undo-tree-id35 . -31) (undo-tree-id36 . -31) (undo-tree-id37 . -31) (undo-tree-id38 . -31) (undo-tree-id39 . -31) (undo-tree-id40 . -31) (undo-tree-id41 . -31) (undo-tree-id42 . -31) (undo-tree-id43 . -31) (undo-tree-id44 . -31) (undo-tree-id45 . -31) (undo-tree-id46 . -31) (undo-tree-id47 . -31) (undo-tree-id48 . -31) (undo-tree-id49 . -31) (undo-tree-id50 . -31) (undo-tree-id51 . -31) (undo-tree-id52 . -31) (undo-tree-id53 . -31) (undo-tree-id54 . -31) (undo-tree-id55 . -31) (undo-tree-id56 . -31) (undo-tree-id57 . -31) (undo-tree-id58 . -31) (undo-tree-id59 . -31) (undo-tree-id60 . -31) (undo-tree-id61 . -31) (undo-tree-id62 . -31) (undo-tree-id63 . -31) (undo-tree-id64 . -31) (undo-tree-id65 . -31) (undo-tree-id66 . -31) (undo-tree-id67 . -31) (undo-tree-id68 . -31) (undo-tree-id69 . -30) (undo-tree-id70 . -30) (undo-tree-id71 . -30) (undo-tree-id72 . -30) (undo-tree-id73 . -30) (undo-tree-id74 . -30) (undo-tree-id75 . -30) (undo-tree-id76 . -30) (undo-tree-id77 . -30) (undo-tree-id78 . -30) (undo-tree-id79 . -30) (undo-tree-id80 . -30) (undo-tree-id81 . -30) (undo-tree-id82 . -30) (undo-tree-id83 . -30) (undo-tree-id84 . -30) (undo-tree-id85 . -30) (undo-tree-id86 . -30) (undo-tree-id87 . -30) (undo-tree-id88 . -30) (undo-tree-id89 . -30) (undo-tree-id90 . -30) (undo-tree-id91 . -30) (undo-tree-id92 . -30) (undo-tree-id93 . -30) (undo-tree-id94 . -30) (undo-tree-id95 . -30) (undo-tree-id96 . -30) (undo-tree-id97 . -30) (undo-tree-id98 . -30) (undo-tree-id99 . -30) (undo-tree-id100 . -30) (undo-tree-id101 . -30) (undo-tree-id102 . -30) (undo-tree-id103 . -30) (undo-tree-id104 . -30) (undo-tree-id105 . -30) (undo-tree-id106 . -30) (undo-tree-id107 . -30) (undo-tree-id108 . -30) (undo-tree-id109 . -30) (undo-tree-id110 . -30) (undo-tree-id111 . -30) (undo-tree-id112 . -30) (undo-tree-id113 . -30) (undo-tree-id114 . -30) (undo-tree-id115 . -30) (undo-tree-id116 . -30) (undo-tree-id117 . -30) (undo-tree-id118 . -30) (undo-tree-id119 . -30) (undo-tree-id120 . -30) (undo-tree-id121 . -30) (undo-tree-id122 . -30) (undo-tree-id123 . -30) (undo-tree-id124 . -30) (undo-tree-id125 . -30) (undo-tree-id126 . -30) (undo-tree-id127 . -30) (undo-tree-id128 . -30) (undo-tree-id129 . -30) (undo-tree-id130 . -30) (undo-tree-id131 . -30) (undo-tree-id132 . -30) (undo-tree-id133 . -30) (undo-tree-id134 . -30) (undo-tree-id135 . -30) (undo-tree-id136 . -30) (undo-tree-id137 . -30) (undo-tree-id138 . -30) (undo-tree-id139 . -30) (undo-tree-id140 . -30) (undo-tree-id141 . -30) (undo-tree-id142 . -30) (undo-tree-id143 . -30) (undo-tree-id144 . -30) (undo-tree-id145 . -30) (undo-tree-id146 . -30) (undo-tree-id147 . -30) (undo-tree-id148 . -30) (undo-tree-id149 . -30) (undo-tree-id150 . -30) (undo-tree-id151 . -30) (undo-tree-id152 . -30) (undo-tree-id153 . -30) (undo-tree-id154 . -35) 264 (t 26376 39063 649670 441000)) nil (26376 39168 936202 0) 0 nil] [nil nil ((#("  )" 0 1 (face highlight-indent-guides-top-character-face display "▏" fontified t highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "▏") (top) (face highlight-indent-guides-top-character-face display "▏")) ((#<marker at 258 in md.el> . #<marker at 432 in md.el>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 258 in md.el> . #<marker at 432 in md.el>)))) 2 3 (fontified t)) . 463) (undo-tree-id11 . -2) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -1) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (t 26376 39063 649670 441000)) ((463 . 466)) (26376 39066 489472 0) 0 nil])
nil
nil
nil
