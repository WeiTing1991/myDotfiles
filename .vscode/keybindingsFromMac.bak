	/* NOTE: https://github.com/VSpaceCode/vscode-which-key/blob/master/package.json */
	// quick open navigation

	// Enable to use leader key everywhere
	// Navigation
	{
		"key": "ctrl-h",
		"command": "workbench.action.navigateLeft"
	},
	{
		"key": "ctrl-l",
		"command": "workbench.action.navigateRight"
	},
	{
		"key": "ctrl-k",
		"command": "workbench.action.navigateUp"
	},
	{
		"key": "ctrl-j",
		"command": "workbench.action.navigateDown"
	},
	{
		"key": "space",
		"command": "whichkey.show",
		"when": "(!inputFocus && !terminalFocus) || (sideBarFocus && sideBarVisible && !inputFocus) || (editorTextFocus && vim.mode == 'Normal')"
	},
	{
		"key": "shift+space",
		"command": "whichkey.show"
	},
	{
		"key": "ctrl+w",
		"command": "-workbench.action.switchWindow"
	},
	{
		"key": "cmd+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "cmd+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+shift+e",
		"command": "workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "alt+cmd+b",
		"command": "-workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "ctrl+g b",
		"command": "simpleBrowser.show"
	},
	{
		"key": "cmd+k cmd+r",
		"command": "-workbench.action.keybindingsReference"
	},
	{
		"key": "cmd+k cmd+s",
		"command": "-workbench.action.openGlobalKeybindings"
	},

	// find file
	{
		"key": "ctrl+f",
		"command": "workbench.action.quickOpen"
	},
	{
		"key": "cmd+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "shift+cmd+j",
		"command": "-find-it-faster.findFiles"
	},
	{
		"key": "shift+cmd+u",
		"command": "-find-it-faster.findWithinFiles"
	},
	{
		"key": "ctrl+f",
		"command": "-vscode-neovim.ctrl-f",
		"when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
	},
	{
		"key": "ctrl+f",
		"command": "-editor.action.pageDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "ctrl+f",
		"command": "-vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert.f && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
	},

	// close the active editor
	{
		"key": "ctrl+q",
		"command": "workbench.action.closeActiveEditor",
		"when": "!sideBarFocus"
	},

	// show commands
	{
		"key": "ctrl-shift-p",
		"command": "workbench.action.showCommands"
	},

	// Nav and window move/split
	// switch window
	{
		"key": "ctrl+w w",
		"command": "workbench.action.switchWindow"
	},
	// split windows
	{
		"key": "ctrl-w '",
		"command": "workbench.action.splitEditor"
	},
	{
		"key": "ctrl-w 5",
		"command": "workbench.action.splitEditorDown"
	},


	// nav buffer
	{
		"key": "ctrl+o",
		"command": "workbench.action.nextEditorInGroup"
	},
	{
		"key": "ctrl+i",
		"command": "workbench.action.previousEditorInGroup"
	},
	{
		"key": "shift+alt+f",
		"command": "-editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},

	/* termainal  **********************************************************************************/
	{
		"key": "ctrl+/",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+shift+n",
		"command": "workbench.action.terminal.new",
		"when": "terminalFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.terminal.kill",
		"when": "terminalFocus && !editorTextFocus"
	},
	/* Side panel **********************************************************************************/
	// Close sidebar
	{
		"key": "ctrl+e",
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "sideBarFocus"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.toggleSidebarVisibility"
	},
	// Extensions
	// {
	//   "key": "ctrl+b e",
	//   "command": "workbench.view.extensions",
	//   "when": "viewContainer.workbench.view.extensions.enabled"
	// },
	// {
	//   "key": "ctrl+b e",
	//   "command": "workbench.action.closeSidebar",
	//   "when": "sideBarFocus "
	// },
	// File tree
	{
		"key": "q",
		"command": "workbench.action.closeSidebar",
		"when": "explorerViewletFocus && !inputFocus"
	},
	{
		"key": "ctrl+a d",
		"command": "workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+b d",
		"command": "workbench.action.closeSidebar",
		"when": "explorerViewletFocus"
	},
	// nav folder/file
	{
		"key": "h",
		"command": "list.collapse",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{
		"key": "j",
		"command": "list.focusDown",
		"when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "k",
		"command": "list.focusUp",
		"when": "listFocus && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	// TODO:how to fix the open
	{
		"key": "l",
		"command": "list.toggleExpand",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{
		"key": "Enter",
		"command": "list.toggleExpand",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	/** netrew **/
	{
		"key": "n",
		"command": "vsnetrw.create",
		"when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+5",
		"command": "-vsnetrw.create",
		"when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+n",
		"command": "vsnetrw.createDir",
		"when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "d",
		"command": "-vsnetrw.createDir",
		"when": "editorTextFocus && editorLangId == 'vsnetrw' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	/* Misc ****************************************************************************************/
	// reload and clear
	{
		"key": "ctrl+b r",
		"command": "workbench.action.reloadWindow"
	},
	{
		"key": "ctrl+b backspace",
		"command": "workbench.action.clearRecentFiles"
	},
	// adjust font size
	{
		"key": "ctrl+-",
		"command": "workbench.action.zoomOut"
	},
	{
		"key": "ctrl+=",
		"command": "workbench.action.zoomIn"
	},
	{
		"key": "ctrl+0",
		"command": "workbench.action.zoomReset"
	},
	// NOTE: DO I need this?
	// select move
	{
		"key": "ctrl+n",
		"command": "selectNextSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "ctrl+y",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+n",
		"command": "selectNextCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+p",
		"command": "selectPrevCodeAction",
		"when": "codeActionMenuVisible"
	},
	{
		"key": "ctrl+y",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	// {
	//   "key": "ctrl+n",
	//   "command": "workbench.action.quickOpenNavigateNext",
	//   "when": "inQuickOpen"
	// },
	// {
	//   "key": "ctrl+p",
	//   "command": "workbench.action.quickOpenNavigatePrevious",
	//   "when": "inQuickOpen"
	// },
	// open config ettings
	{
		"key": "ctrl+x k",
		"command": "workbench.action.openGlobalKeybindings"
	},
	{
		"key": "ctrl+x s",
		"command": "workbench.action.openSettings"
	},
	{
		"key": "ctrl+x",
		"command": "workbench.action.openGlobalKeybindingsFile",
		"when": "inKeybindings"
	},
	{
		"key": "ctrl+c",
		"command": "workbench.action.openSettingsJson",
		"when": "inSettingsEditor"
	},
	// copilot
	{
		"key": "ctrl+l",
		"command": "editor.action.triggerSuggest",
		"when": "vim.mode == 'Insert' && editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	// BUG:
	// {
	//   "key": "ctrl+b c c",
	//   "command": "runCommands",
	//   "args": {
	//     "commands": [
	//       // "workbench.action.splitEditorLeft",
	//       "workbench.action.chat.openInEditor"
	//     ],
	//     "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
	//   }
	// },
	{
		"key": "ctrl+b c c",
		"command": "workbench.action.chat.openInEditor",
		"when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
	},
	{
		"key": "ctrl+b c e",
		"command": "workbench.action.chat.openEditSession",
		"when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
	},
	{
		"key": "ctrl+b c t",
		"command": "github.copilot.toggleCopilot"
	},
	{
		"key": "alt+i",
		"command": "inlineChat.startWithCurrentLine",
		"when": "editorFocus && github.copilot.chat.editor.enableLineTrigger && inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
	},
	/* note taking *****/
	/* project  *****/
	{
		"key": "ctrl+alt+p",
		"command": "projectManager.listProjects"
	},
	// some misc need to check
	{
		"key": "ctrl+n",
		"command": "editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "ctrl+p",
		"command": "editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "ctrl+n",
		"command": "list.scrollDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'"
	},
	{
		"key": "ctrl+p",
		"command": "list.scrollUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'"
	},
	// unbinding
	{
		"key": "shift+cmd+m",
		"command": "-workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{
		"key": "ctrl+n",
		"command": "-workbench.action.files.newUntitledFile"
	},
	{
		"key": "cmd+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "cmd+i",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "cmd+i",
		"command": "-inlineChat.startWithCurrentLine",
		"when": "editorFocus && github.copilot.chat.editor.enableLineTrigger && inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
	},
	{
		"key": "ctrl+cmd+i",
		"command": "-workbench.panel.chat",
		"when": "workbench.panel.chat.view.copilot.active"
	},
	{
		"key": "shift+cmd+i",
		"command": "-workbench.action.chat.openEditSession",
		"when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
	},
	{
		"key": "cmd+down",
		"command": "-list.scrollDown",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'"
	},
	{
		"key": "cmd+up",
		"command": "-list.scrollUp",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'"
	},
	{
		"key": "cmd+k v",
		"command": "-markdown-preview-enhanced.openPreviewToTheSide",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "down",
		"command": "-editor.action.scrollDownHover",
		"when": "editorHoverFocused"
	},
	{
		"key": "up",
		"command": "-editor.action.scrollUpHover",
		"when": "editorHoverFocused"
	}
